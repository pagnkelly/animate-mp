<template>
  <view class="container">
    <view class="demo" bindtap="translate">
      <view class="square shadow">
      </view>
      <view class="square" wx:style="{{demo1}}">
      </view>
    </view>
    <view wx:for="{{list}}" wx:key="name" class="item" bindtap="jump(item.name)" style="background:{{item.color}}">
      <view>
        <component is="{{item.name}}" />
      </view>
      <view>
        {{item.zh}}
      </view>
    </view>
  </view>
</template>

<style lang="stylus">
.container
  display flex
  flex-direction column
  .demo
    height 100px
    background lightblue
    align-items center
    display flex
  .shadow
    position absolute
    opacity 0.1
  .square
    width 25px
    height 25px
    background #7F00FF
.item
  height 100px
  color #ffffff
  margin 10px 20px
  border-radius 8px
  display flex
  justify-content space-between
  align-items center
  padding 0 20px
</style>

<script lang="ts">
import mpx, { createPage } from '@mpxjs/core'
import animate from '../../../src/main'
createPage({
  data: {
    demo1: {
    }
  },
  onLoad () {
    // onLoad
    const a = animate()
    console.log(a, 'aaaaa')
  },
  computed: {
    list () {
      const COLORS = ['#e54d42', '#f37b1d', '#fbbd08', '#8dc63f', '#1cbbb4']
      const list = [
        {
          name: 'numberscroll',
          zh: '数字滚动'
        },
        {
          name: 'textscroll',
          zh: '文案滚动'
        },
        {
          name: 'shakejump',
          zh: '晃动跳跃'
        },
        {
          name: 'loadingfinish',
          zh: '加载完成'
        },
        {
          name: 'progressbar',
          zh: '进度条'
        },
        {
          name: 'circle-countdown',
          zh: '圆形倒计时'
        }
      ]
      return list.map((item, idx) => {
        return {
          ...item,
          color: COLORS[idx] ? COLORS[idx] : COLORS[idx % COLORS.length]
        }
      })
    }
  },
  methods: {
    translate (): void {
      this.$nextTick(() => {
        this.demo1 = {
          transform: 'translateX(200px)',
          transition: 'transform 1s'
        }
      })
    },
    jump (page: string) {
      console.log(page, 'page')
      mpx.navigateTo({ url: page })
    }
  }
})
</script>

<script type="application/json">
  {
    "usingComponents": {
      "numberscroll": "../shops/numberscroll",
      "textscroll": "../shops/textscroll",
      "shakejump": "../shops/shakejump",
      "progressbar": "../shops/progressbar",
      "loadingfinish": "../shops/loadingfinish",
      "circle-countdown": "../shops/circle-countdown"
    }
  }
</script>
